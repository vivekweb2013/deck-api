// Code generated by MockGen. DO NOT EDIT.
// Source: create_deck_service.go

// Package deck is a generated GoMock package.
package deck

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCreateDeckService is a mock of CreateDeckService interface.
type MockCreateDeckService struct {
	ctrl     *gomock.Controller
	recorder *MockCreateDeckServiceMockRecorder
}

// MockCreateDeckServiceMockRecorder is the mock recorder for MockCreateDeckService.
type MockCreateDeckServiceMockRecorder struct {
	mock *MockCreateDeckService
}

// NewMockCreateDeckService creates a new mock instance.
func NewMockCreateDeckService(ctrl *gomock.Controller) *MockCreateDeckService {
	mock := &MockCreateDeckService{ctrl: ctrl}
	mock.recorder = &MockCreateDeckServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCreateDeckService) EXPECT() *MockCreateDeckServiceMockRecorder {
	return m.recorder
}

// CreateDeck mocks base method.
func (m *MockCreateDeckService) CreateDeck(shuffle bool, cards Cards) (*Deck, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateDeck", shuffle, cards)
	ret0, _ := ret[0].(*Deck)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateDeck indicates an expected call of CreateDeck.
func (mr *MockCreateDeckServiceMockRecorder) CreateDeck(shuffle, cards interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateDeck", reflect.TypeOf((*MockCreateDeckService)(nil).CreateDeck), shuffle, cards)
}
