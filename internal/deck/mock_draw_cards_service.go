// Code generated by MockGen. DO NOT EDIT.
// Source: draw_cards_service.go

// Package deck is a generated GoMock package.
package deck

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockDrawCardsService is a mock of DrawCardsService interface.
type MockDrawCardsService struct {
	ctrl     *gomock.Controller
	recorder *MockDrawCardsServiceMockRecorder
}

// MockDrawCardsServiceMockRecorder is the mock recorder for MockDrawCardsService.
type MockDrawCardsServiceMockRecorder struct {
	mock *MockDrawCardsService
}

// NewMockDrawCardsService creates a new mock instance.
func NewMockDrawCardsService(ctrl *gomock.Controller) *MockDrawCardsService {
	mock := &MockDrawCardsService{ctrl: ctrl}
	mock.recorder = &MockDrawCardsServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDrawCardsService) EXPECT() *MockDrawCardsServiceMockRecorder {
	return m.recorder
}

// DrawCards mocks base method.
func (m *MockDrawCardsService) DrawCards(deckID string, count int) (Cards, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DrawCards", deckID, count)
	ret0, _ := ret[0].(Cards)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DrawCards indicates an expected call of DrawCards.
func (mr *MockDrawCardsServiceMockRecorder) DrawCards(deckID, count interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DrawCards", reflect.TypeOf((*MockDrawCardsService)(nil).DrawCards), deckID, count)
}
